
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.*;
import java.awt.TrayIcon.MessageType;
import java.util.TimerTask;
import java.util.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vedan
 */
public class TodoList extends javax.swing.JFrame {

    /**
     * Creates new form TodoList
     */
    Connection conn=null;
    PreparedStatement ps=null;
    int userId;
    public TodoList(int userId) {
        initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size=toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        this.userId=userId;
        createList();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(29, 209, 161));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.PNG"))); // NOI18N
        jLabel2.setText("      Tasks");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanel2.setBackground(java.awt.Color.white);

        jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("1. Todo 1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );

        jTextField1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jButton1.setBackground(new java.awt.Color(29, 209, 161));
        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void createList(){
        jPanel2.removeAll();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/checkit?zeroDateTimeBehavior=CONVERT_TO_NULL ";
            String uname="root";
            String passwordDB="";
            String query="SELECT * FROM `tasks` WHERE `user_id` = "+ this.userId;

            conn =  DriverManager.getConnection(url,uname,passwordDB);
            ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            int y=25;
            int count=1;
            while (rs.next()) {
                String task=rs.getString("task");
                JLabel temp=new JLabel(count + "."+ rs.getString("task"));
                if(rs.getInt("isDone")== 1){
                    System.out.println("Done");
                    temp.setForeground(new Color(235, 34, 34));
                }
                
                
                JButton remind=new JButton("Remind");
                JButton delete=new JButton("Delete");
              
                //Remind Pane
                JPanel p = new JPanel();
                JTextField reminderTime = new JTextField();
                JButton remindBtn= new JButton("Set");
                
                
                //Set background and font
                temp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
                delete.setBackground(new Color(235, 34, 34));
                remind.setBackground(new Color(29,209,161));
                
                //Set Bounds
                setLayout (null);
                temp.setBounds(10, y,200, 30);  
                remind.setBounds(275,y,70,24);
                delete.setBounds(345,y,65,24);
                reminderTime.setColumns(5);
                
               
                
                //Set Id to Components
                temp.setName(rs.getString("id")+" "+ rs.getInt("isDone"));
                delete.setActionCommand(rs.getString("id"));
                remindBtn.setActionCommand(rs.getString("id"));
                
               
                //Attach Action Listeners
                temp.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        setToDone(temp.getName());
                    }
                });
                
                delete.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        deleteTask(delete.getActionCommand());
                    }
                });
                
                remind.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        JOptionPane.showConfirmDialog(null, p, "Set Reminder for : "+ task , JOptionPane.DEFAULT_OPTION);
                    }
                });
                
                remindBtn.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        remindTaskScheduler(remindBtn.getActionCommand(), reminderTime.getText(), task);
                    }
                });
                
                
                //Adding COmponents to Panels
                p.add(new JLabel("Reminder Time : "));
                p.add(reminderTime);
                p.add(remindBtn);
                
                jPanel2.add(temp);
                jPanel2.add(remind);
                jPanel2.add(delete);
                y+=30;
                count+=1;
            }
            conn.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }

        
    }
    
    //Todo Actions
    public void setToDone(String dual){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/checkit?zeroDateTimeBehavior=CONVERT_TO_NULL ";
            String uname="root";
            String passwordDB="";
            String query;
            if(Integer.parseInt(dual.split(" ")[1])==0){
                query="update tasks set isDone = 1 where id = ? ";
            }else{
                query="update tasks set isDone = 0 where id = ? ";                
            }
            conn =  DriverManager.getConnection(url,uname,passwordDB);
            ps = conn.prepareStatement(query);
            ps.setString(1,dual.split(" ")[0]);
            ps.executeUpdate();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        TodoList todoList = new TodoList(this.userId);
        todoList.setVisible(true);
        this.setVisible(false);
    }
    
    public void deleteTask(String taskId){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/checkit?zeroDateTimeBehavior=CONVERT_TO_NULL ";
            String uname="root";
            String passwordDB="";
            String query;
            query="delete  from tasks where id = ? ";
            conn =  DriverManager.getConnection(url,uname,passwordDB);
            ps = conn.prepareStatement(query);
            ps.setString(1,taskId);
            ps.executeUpdate();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
        TodoList todoList = new TodoList(this.userId);
        todoList.setVisible(true);
        this.setVisible(false);
    }
//    public void remind Task(){
//        
//    }
    public void remindTaskScheduler(String taskId, String reminderTime, String taskName){
        try {
            System.out.println(taskId+" "+ reminderTime );
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url="jdbc:mysql://localhost:3306/checkit?zeroDateTimeBehavior=CONVERT_TO_NULL ";
            String uname="root";
            String passwordDB="";
            String query;
            query="update tasks set reminder = ? where id = ? ";
            conn =  DriverManager.getConnection(url,uname,passwordDB);
            ps = conn.prepareStatement(query);
            ps.setString(1,reminderTime);
            ps.setString(2,taskId);
            ps.executeUpdate();
            
            notifSender(taskName, reminderTime);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    class NotifTask extends TimerTask{
        String taskName;
        public NotifTask(String taskName){
            this.taskName=taskName;
        }
        @Override
        public void run() {
            try {
                displayTray(this.taskName);
            } catch (AWTException ex) {
                Logger.getLogger(TodoList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    public void notifSender(String taskName, String reminderTime) throws AWTException{
        if (SystemTray.isSupported()) {
             TimerTask task=new NotifTask(taskName);
             Timer timer= new Timer();
             System.out.println(Integer.parseInt(reminderTime)*60000);
             timer.schedule(task, Integer.parseInt(reminderTime)*60000 );
        } else {
            System.err.println("System tray not supported!");
        }
    }
    public void displayTray(String taskName) throws AWTException {
        SystemTray tray = SystemTray.getSystemTray();

//        Image image = Toolkit.getDefaultToolkit().createImage("./logo.PNG");
        Image image = Toolkit.getDefaultToolkit().createImage(getClass().getResource("./logo.PNG"));

        TrayIcon trayIcon = new TrayIcon(image, "Tray Demo");
        trayIcon.setImageAutoSize(true);
        trayIcon.setToolTip("System tray icon demo");
        tray.add(trayIcon);

        trayIcon.displayMessage("Checkit", "Hey Hardworking Person, Its time to do the task - " + taskName, MessageType.INFO);
    }
//    ******************************
       
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String todo= jTextField1.getText();
        jPanel2.removeAll();
        if(todo!=""){
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String url="jdbc:mysql://localhost:3306/checkit?zeroDateTimeBehavior=CONVERT_TO_NULL ";
                String uname="root";
                String passwordDB="";
                String query="insert into tasks(task,user_id) values(?,?)";
                conn =  DriverManager.getConnection(url,uname,passwordDB);
                ps = conn.prepareStatement(query);
                ps.setString(1, todo);
                ps.setInt(2, this.userId);

                int row= ps.executeUpdate();
                conn.close();
                jTextField1.setText("");
                this.createList();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
        TodoList todoList = new TodoList(this.userId);
        todoList.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TodoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TodoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TodoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TodoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TodoList todoList = new TodoList(12);
                todoList.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
